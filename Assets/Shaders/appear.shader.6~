Shader "Custom/NonLight/appear" {
	Properties {
		_MainTex("Base (RGB)", 2D) = "white" {}
		_LineColor ("Line Color", Color) = (0.0,1.0,0.0,1.0)
		_LightPow("time", Range (0.0, 3.0)) = 0.5
	}
	SubShader {

        Blend SrcAlpha OneMinusSrcAlpha

		Pass{
		
			CGPROGRAM
#pragma vertex vert
#pragma fragment frag
#include "UnityCG.cginc"

			sampler2D _MainTex;
			float _LightPow;
			float4 _LineColor;
			float4 _MainTex_ST;

			/** shader */
			struct v2f {
			    float4  pos : SV_POSITION;
    			float2  uv : TEXCOORD0;
			};
/* vertex shader */
v2f vert (appdata_base v)
{
    v2f o;
    o.pos = mul (UNITY_MATRIX_MVP, v.vertex);
    o.uv  = TRANSFORM_TEX (v.texcoord, _MainTex);
    return o;
}
/* flagment shader */
half4 frag (v2f i) : COLOR
{
    half4 texcol = tex2D (_MainTex, i.uv);
	half tmp = (1.0 - abs(0.5 - i.uv.x) ) * (1.0 - abs(0.5 - i.uv.y ) );
	tmp *= _LightPow;

	half a = clamp( 1 - max(tmp+0.3,0.001) , 0 , 1);
	half b = clamp( 1.0 - fmod( (a + 1.0) * 30 , 20 ) , 0 , 1  );

	half c = floor(tmp + 0.65);


	tmp = min( min( tmp  , c ) , 1.0 );

	texcol.r = max( b * _LineColor.r , texcol.r * tmp);
	texcol.g = max( b * _LineColor.g , texcol.g * tmp);
	texcol.b = max( b * _LineColor.b , texcol.b * tmp);
	return texcol;
}

			ENDCG
		}
	} 
}
